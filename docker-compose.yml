version: '3.8'

services:
  blissey:
    image: blissey-graphql-service:latest
    build:
      context: ../blissey-graphql-service/
      dockerfile: Dockerfile
    env_file: ../blissey-graphql-service/.env
    environment:
      - POKEMON_TCG_API_KEY=$${POKEMON_TCG_API_KEY}
      - MONGO_DB_USERNAME=$${MONGO_DB_USERNAME}
      - MONGO_DB_PASSWORD=$${MONGO_DB_PASSWORD}
      - MONGO_DB_CLUSTER_NAME=$${MONGO_DB_CLUSTER_NAME}
      - MONGO_DB_URI=$${MONGO_DB_URI}
      - MONGO_DB_COLLECTION_NAME=$${MONGO_DB_COLLECTION_NAME}
      - NODE_ENV=production
    expose:
      - "4000"
    ports:
      - "4000:4000"
    restart: on-failure
    networks:
      - hoennet
  cyndaquil:
    image: cyndaquil-users-service:latest
    build: 
      context: ../cyndaquil-users/
      dockerfile: Dockerfile
    env_file: ../cyndaquil-users/.env
    environment:
      - NODE_ENV=production
      - PORT=8080
      - MYSQL_ROOT_PASSWORD=examplepassword
      - MYSQL_DATABASE=users
    expose:
      - 8080
    ports:
      - "8080:8080"
    depends_on:
      - cyndaquil_mysql_db
    restart: always
    networks:
      - hoennet
  cyndaquil_mysql_db:
    platform: linux/x86_64
    image: mysql:5.7
    restart: on-failure
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=examplepassword
      - MYSQL_DATABASE=users
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '3307:3306'
    volumes: 
      - db-config:/etc/mysql 
      - db-data:/var/lib/mysql
    networks:
        - hoennet
  ditto:
    image: ditto-metrics-service:latest
    build:
      context: ../ditto-metrics-webserver/ditto-server/
      dockerfile: Dockerfile
    env_file:
      - ../ditto-metrics-webserver/ditto-server/.env
    expose:
      - 7100
    ports:
      - '7100:7100'
    restart: on-failure
    networks:
      - hoennet
  pikachu:
    image: pikachu-deck-service:latest
    build: 
      context: ../pikachu-ai-deck-service/
      dockerfile: Dockerfile
    env_file:
      - ../pikachu-ai-deck-service/.env
    expose:
      - 4001
    ports:
      - '4001:4001'
    networks:
      - hoennet
    restart: on-failure
  togepi:
    image: togepi-ui:latest
    build: 
      context: ../togepi-adventura/
      dockerfile: Dockerfile
    env_file:
      - ../togepi-adventura/.env
    environment:
      - POKEMON_TCG_API_KEY=$${POKEMON_TCG_API_KEY}  
      - X_PIKACHU_API_KEY_HEADER=$${X_PIKACHU_API_KEY_HEADER}
      - TOGEPI_LOG_LEVEL=info
      - TOGEPI_ADVENTURA_RAINBOW_CARD=$${TOGEPI_ADVENTURA_RAINBOW_CARD}
      - NODE_ENV=production
    expose:
      - "3000"
    ports:
      - "3000:3000"
    restart: always
    networks:
      - hoennet
networks:
  hoennet:
volumes:
  db-config:
  db-data:
